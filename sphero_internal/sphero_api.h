////////////////////////////////////////////////////////////////////////////////
//!
//! @addtogroup       api
//! @{
//!
//! @file             sphero_api.h
//!
//! @author           Julie Tan
//!
//! @date             07/10/2019
//!
//! @brief            Sphero API
//!
//! @details          Byte-wise channels connecting interfaces to consumers
//!
//! @copyright        2010-2016. Sphero Inc. (http://www.sphero.com)
//!                   All Rights Reserved
//!
////////////////////////////////////////////////////////////////////////////////

#ifndef SPHERO_API__
#define SPHERO_API__

///////////////////////////////////////////////////////////////////////////////
//  Includes
///////////////////////////////////////////////////////////////////////////////

#ifdef __cplusplus
extern "C" {
#endif
#include "api.h"
#include "api_addressing.h"
#include "api_command_client.h"
#include "api_command_server.h"
#include "api_endianness_helper_functions.h"
#include "api_error.h"
#include "api_ids.h"
#include "api_packet.h"
#include "api_protocols.h"
#include "fifo.h"
#include "io_channel.h"
#ifdef __cplusplus
}
#endif


///////////////////////////////////////////////////////////////////////////////
//  Public Macros
///////////////////////////////////////////////////////////////////////////////

typedef enum
{
    RVR_API_NODE_NORDIC             = 0x1,
    RVR_API_NODE_ST                 = 0x2,
} rvrApiNode_t;

///////////////////////////////////////////////////////////////////////////////
//  Public Types
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
//  Public Data Declarations
///////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////
//  Public Functions Prototypes
///////////////////////////////////////////////////////////////////////////////

// Initalize the uart API
void initUartApi(const HardwareSerial* serial);

// service UART receive api commands
void serviceUartApi(void);

// send api to certain node id
bool sendApiCommandToNode(uint8_t nodeId, apiPacket_t *command, apiReponseHandler_t apiResponseCallbackHandler);

#endif // end of include guard: SPHERO_API__

//! @}  end of doxygen group
